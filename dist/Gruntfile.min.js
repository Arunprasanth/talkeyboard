"use strict";module.exports=function(a){a.initConfig({uglify:{files:{src:["**/*.js","!*.min.js","!node_modules"],dest:"dist/",expand:!0,flatten:!0,ext:".min.js"}},watch:{js:{files:"**/*.js",tasks:["uglify"]}}}),a.loadNpmTasks("grunt-contrib-watch"),a.loadNpmTasks("grunt-contrib-uglify"),a.registerTask("default",["uglify"])},module.exports=function(a){a.initConfig({nodeunit:{files:["test/**/*_test.js"]},jshint:{options:{jshintrc:".jshintrc"},gruntfile:{src:"Gruntfile.js"},lib:{src:["lib/**/*.js"]},test:{src:["test/**/*.js"]}},watch:{gruntfile:{files:"<%= jshint.gruntfile.src %>",tasks:["jshint:gruntfile"]},lib:{files:"<%= jshint.lib.src %>",tasks:["jshint:lib","nodeunit"]},test:{files:"<%= jshint.test.src %>",tasks:["jshint:test","nodeunit"]}}}),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-watch"),a.registerTask("default",["jshint","nodeunit"])},module.exports=function(a){a.initConfig({nodeunit:{files:["test/**/*_test.js"]},jshint:{options:{jshintrc:".jshintrc"},gruntfile:{src:"Gruntfile.js"},lib:{src:["lib/**/*.js"]},test:{src:["test/*.js"]}},watch:{gruntfile:{files:"<%= jshint.gruntfile.src %>",tasks:["jshint:gruntfile"]},lib:{files:"<%= jshint.lib.src %>",tasks:["jshint:lib","nodeunit"]},test:{files:"<%= jshint.test.src %>",tasks:["jshint:test","nodeunit"]}}}),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-watch"),a.registerTask("default",["jshint","nodeunit"])},module.exports=function(a){a.initConfig({nodeunit:{files:["test/**/*_test.js"]},jshint:{options:{jshintrc:".jshintrc"},gruntfile:{src:"Gruntfile.js"},lib:{src:["lib/**/*.js"]},test:{src:["test/*.js"]}},watch:{gruntfile:{files:"<%= jshint.gruntfile.src %>",tasks:["jshint:gruntfile"]},lib:{files:"<%= jshint.lib.src %>",tasks:["jshint:lib","nodeunit"]},test:{files:"<%= jshint.test.src %>",tasks:["jshint:test","nodeunit"]}}}),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-watch"),a.registerTask("default",["jshint","nodeunit"])},module.exports=function(a){a.initConfig({jshint:{all:["Gruntfile.js","lib/**/*.js","bin/*"],options:{curly:!0,eqeqeq:!0,immed:!0,latedef:!0,newcap:!0,noarg:!0,sub:!0,undef:!0,unused:!0,boss:!0,eqnull:!0,node:!0,es5:!0}}}),a.loadNpmTasks("grunt-contrib-jshint"),a.registerTask("test",["jshint"]),a.registerTask("default",["test"])},module.exports=function(a){a.initConfig({nodeunit:{files:["test/**/*_test.js"]},jshint:{options:{jshintrc:".jshintrc"},all:["Gruntfile.js","lib/**/*.js","test/**/*.js"]}}),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.registerTask("default",["jshint","nodeunit"])},module.exports=function(a){a.initConfig({files:["Gruntfile.js","tasks/**/*.js","test/*.js"],watch:{all:{files:"<%= files %>"}},jshint:{all:"<%= files %>"},complexity:{generic:a.file.readJSON("complexity.json")}}),a.loadNpmTasks("grunt-contrib-jshint"),a.registerTask("default",["jshint","complexity"]),a.loadTasks("tasks")},module.exports=function(a){a.initConfig({nodeunit:{all:["test/{grunt,tasks,util}/**/*.js"]},jshint:{gruntfile:["Gruntfile.js"],libs_n_tests:["lib/**/*.js","<%= nodeunit.all %>"],subgrunt:["<%= subgrunt.all %>"],options:{curly:!0,eqeqeq:!0,immed:!0,latedef:!0,newcap:!0,noarg:!0,sub:!0,undef:!0,unused:!0,boss:!0,eqnull:!0,node:!0,es5:!0}},watch:{gruntfile:{files:["<%= jshint.gruntfile %>"],tasks:["jshint:gruntfile"]},libs_n_tests:{files:["<%= jshint.libs_n_tests %>"],tasks:["jshint:libs_n_tests","nodeunit"]},subgrunt:{files:["<%= subgrunt.all %>"],tasks:["jshint:subgrunt","subgrunt"]}},subgrunt:{all:["test/gruntfile/*.js"]}}),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-contrib-watch"),a.registerTask("test",["jshint","nodeunit","subgrunt"]),a.registerTask("default",["test"]),a.registerMultiTask("subgrunt","Run a sub-gruntfile.",function(){var b=require("path");a.util.async.forEachSeries(this.filesSrc,function(c,d){a.util.spawn({grunt:!0,args:["--gruntfile",b.resolve(c)]},function(b,e){b?(a.log.error(e.stdout).writeln(),d(new Error('Error running sub-gruntfile "'+c+'".'))):(a.verbose.ok(e.stdout),d())})},this.async())})},module.exports=function(a){a.initConfig({jshint:{all:["Gruntfile.js","tasks/**/*.js","<%= nodeunit.tests %>"],options:{jshintrc:".jshintrc"}},clean:{tests:["tmp"]},uglify:{compress:{files:{"tmp/compress.js":["test/fixtures/src/simple.js"]},options:{mangle:!1}},compress_mangle:{files:{"tmp/compress_mangle.js":["test/fixtures/src/simple.js"]}},compress_mangle_banner:{files:{"tmp/compress_mangle_banner.js":["test/fixtures/src/simple.js"]},options:{banner:"// banner without sourcemap\n"}},no_src:{files:{"tmp/compress_mangle.js":[]}},compress_mangle_except:{files:{"tmp/compress_mangle_except.js":["test/fixtures/src/simple.js"]},options:{mangle:{except:["argumentC"]}}},compress_mangle_beautify:{files:{"tmp/compress_mangle_beautify.js":["test/fixtures/src/simple.js"]},options:{beautify:!0}},enclose:{files:{"tmp/enclose.js":["test/fixtures/src/simple.js"]},options:{beautify:!0,compress:!1,enclose:{"window.argA":"paramA","window.argB":"paramB"},mangle:!1}},multifile:{files:{"tmp/multifile.js":["test/fixtures/src/simple.js","test/fixtures/src/comments.js"]},options:{mangle:!1}},compress_mangle_sourcemap:{files:{"/dev/null":["test/fixtures/src/simple.js"]},options:{sourceMap:"tmp/compress_mangle_sourcemap"}},sourcemapin:{files:{"tmp/sourcemapin.js":["test/fixtures/src/simple2.js"]},options:{mangle:!1,banner:"// Hello World\n",sourceMap:"tmp/sourcemapin",sourceMapIn:"test/fixtures/src/simple2.map",sourceMapRoot:"http://local.host/js/"}},sourcemapurl:{files:{"tmp/sourcemapurl.js":["test/fixtures/src/simple.js"]},options:{sourceMappingURL:"js/sourcemapurl.js.map"}},comments:{src:"test/fixtures/src/comments.js",dest:"tmp/comments.js",options:{mangle:!1,preserveComments:"some"}},wrap:{src:"test/fixtures/src/simple.js",dest:"tmp/wrap.js",options:{mangle:!1,wrap:"testExport"}},exportAll:{src:"test/fixtures/src/simple.js",dest:"tmp/exportAll.js",options:{mangle:!1,wrap:"testExport",exportAll:!0}},sourcemap_prefix:{files:{"/dev/null":["test/fixtures/src/simple.js"]},options:{sourceMap:"tmp/sourcemap_prefix",sourceMapPrefix:3}},multiple_sourcemaps:{files:{"tmp/multiple_sourcemaps1.js":["test/fixtures/src/simple.js"],"tmp/multiple_sourcemaps2.js":["test/fixtures/src/comments.js"]},options:{sourceMap:function(a){return a.replace(/\.js$/,".map")},sourceMappingURL:function(a){return a.replace(/\.js$/,".mapurl")}}},sourcemap_in_generator_single_src:{files:[{expand:!0,flatten:!0,src:["test/fixtures/expected/multiple_sourcemaps*.js"],dest:"tmp",ext:".min.js"}],options:{sourceMap:function(a){return a.replace(/\.js$/,"")+".map"},sourceMapIn:function(a){return a.replace(/\.js$/,"")+".map"}}},sourcemap_in_generator_multi_src:{src:"test/fixtures/expected/multiple_sourcemaps*.js",dest:"tmp/multiple_sourcemaps_all.min.js",options:{sourceMap:function(a){return a.replace(/\.js$/,"")+".map"},sourceMapIn:function(a){return a.replace(/\.js$/,"")+".map"}}}},nodeunit:{tests:["test/*_test.js"]}}),a.registerTask("expectFail",function(){function b(b,e,f){a.log.write("\n > "+e.stdout.split("\n").join("\n > ")+"\n");var g=b?!0:new Error("Task "+c+" unexpectedly passed.");d(g)}var c=this.args.join(":"),d=this.async();a.util.spawn({grunt:!0,args:c},b)}),a.loadTasks("tasks"),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-clean"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-contrib-internal"),a.registerTask("test",["clean","uglify:compress","uglify:compress_mangle","uglify:compress_mangle_banner","uglify:no_src","uglify:compress_mangle_except","uglify:compress_mangle_beautify","uglify:multifile","uglify:compress_mangle_sourcemap","uglify:sourcemapin","uglify:sourcemapurl","uglify:comments","uglify:wrap","uglify:exportAll","uglify:sourcemap_prefix","uglify:multiple_sourcemaps","uglify:enclose","uglify:sourcemap_in_generator_single_src","expectFail:uglify:sourcemap_in_generator_multi_src","nodeunit"]),a.registerTask("default",["jshint","test","build-contrib"])},module.exports=function(a){a.initConfig({jshint:{options:{jshintrc:".jshintrc"},all:["*.js","test/*.js"]},nodeunit:{util:["test/index.js"]},watch:{all:{files:["<%= jshint.all %>"],tasks:["test"]}}}),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-contrib-watch"),a.registerTask("test",["jshint","nodeunit"]),a.registerTask("default",["test","watch"])},module.exports=function(a){a.initConfig({jshint:{options:{jshintrc:".jshintrc"},all:["*.js","test/*.js"]},nodeunit:{util:["test/index.js"]},watch:{all:{files:["<%= jshint.all %>"],tasks:["test"]}}}),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.loadNpmTasks("grunt-contrib-watch"),a.registerTask("test",["jshint","nodeunit"]),a.registerTask("default",["test","watch"])},module.exports=function(a){a.initConfig({jshint:{all:["Gruntfile.js","lib/*.js","<%= nodeunit.tests %>"],options:{jshintrc:".jshintrc"}},test_vars:{source:"source/"},test_task:{options:{param:"task",param2:"task",template:"<%= test_vars.source %>",data:{template:["<%= test_vars.source %>"]}},target:{options:{param:"target"}}},nodeunit:{tests:["test/*_test.js"]}}),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.registerTask("test",["nodeunit"]),a.registerTask("default",["jshint","test"])},module.exports=function(a){a.initConfig({jshint:{all:["Gruntfile.js","tasks/*.js","<%= nodeunit.tests %>"],options:{jshintrc:".jshintrc"}},replace:{example:{src:["test/text_files/example.txt"],dest:"test/modified/",replacements:[{from:"Hello",to:"Good bye"},{from:/(f|F)(o{2,100})/g,to:"M$2"},{from:/"localhost"/,to:function(a,b,c,d){return'"www.mysite.com"'}},{from:"<p>Version:</p>",to:'<p>Version: <%= grunt.template.date("18 Feb 2013", "yyyy-mm-dd") %></p>'},{from:/[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{2,4}/g,to:function(){return"<%= grunt.template.date('18 Feb 2013', 'dd/mm/yyyy') %>"}}]},overwrite:{src:["test/modified/example.txt"],overwrite:!0,replacements:[{from:"World",to:"PLANET"}]},disable_template_processing:{src:["test/text_files/template-example.txt"],dest:"test/modified/",options:{processTemplates:!1},replacements:[{from:/url\(.*\)/g,to:function(){return"url(<% some unprocessed text %>)"}}]}},nodeunit:{errors:["test/text-replace-error-tests.js"],tests:["test/text-replace-unit-tests.js"],replace:["test/text-replace-functional-tests.js"]}}),a.loadTasks("tasks"),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-nodeunit"),a.registerTask("default",["jshint","test"]),a.registerTask("test",function(){var b=a.option("force")||!1,c=["nodeunit:tests"];b&&c.push("nodeunit:errors"),c.push("replace"),c.push("nodeunit:replace"),a.task.run(c)})},module.exports=function(a){function b(c,d){var f=c.shift();f?e.exec(f,function(e){0!==e?(a.fail.fatal("Command `"+f+"` failed",e),d()):b(c,d)}):d()}var c=require("./package.json");global.jasmineVersion=c.version;var d="v"+c.version;a.initConfig({pkg:c,jshint:{all:["lib/**/*.js","spec/**/*.js"]}});var e=require("shelljs");a.registerTask("release","Create tag "+d+" and push jasmine-"+c.version+" to NPM",function(){var a=this.async(),c=["git tag "+d,"git push origin master --tags","npm publish"];b(c,a)}),a.loadNpmTasks("grunt-contrib-jshint"),a.loadTasks("tasks"),a.registerTask("default",["jshint:all","specs"])},module.exports=function(a){a.loadNpmTasks("grunt-contrib-jshint"),a.initConfig({jshint:{all:["mustache-express.js","find-partials.js","test/*.js"],options:{jshintrc:".jshintrc"}}}),a.registerTask("default","jshint")};